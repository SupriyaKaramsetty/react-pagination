{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\react-pagination-with-custom-hook\\\\src\\\\components\\\\Details.js\";\nimport React, { Fragment } from 'react';\nimport usePagination from '../hooks/usePagination';\n\nconst Details = ({\n  data,\n  itemsPerPage,\n  startFrom\n}) => {\n  const {\n    slicedData,\n    pagination,\n    prevPage,\n    nextPage,\n    changePage\n  } = usePagination({\n    itemsPerPage,\n    data,\n    startFrom\n  });\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table is-fullwidth is-striped\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, \"Id\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, \"Company\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, \"Job\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, \"City\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, \"Phone\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, \"Fav Movie\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, slicedData.map(item => /*#__PURE__*/React.createElement(\"tr\", {\n    key: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 15\n    }\n  }, item.name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 15\n    }\n  }, item.email), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 15\n    }\n  }, item.company), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 15\n    }\n  }, item.job), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 15\n    }\n  }, item.city), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }\n  }, item.phone), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }\n  }, item.movie))))), /*#__PURE__*/React.createElement(\"nav\", {\n    className: \"pagination\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/#\",\n    className: \"pagination-previous\",\n    onClick: prevPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"Previous\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/#\",\n    className: \"pagination-next\",\n    onClick: nextPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"Next\"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"pagination-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, pagination.map(page => {\n    if (!page.ellipsis) {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: page.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 24\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: \"/#\",\n        className: page.current ? 'pagination-link is-current' : 'pagination-link',\n        onClick: e => changePage(page.id, e),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 19\n        }\n      }, page.id));\n    } else {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: page.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 24\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"pagination-ellipsis\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 42\n        }\n      }, \"\\u2026\"));\n    }\n  }))));\n};\n\nexport default Details;","map":{"version":3,"sources":["C:/Users/HP/Desktop/react-pagination-with-custom-hook/src/components/Details.js"],"names":["React","Fragment","usePagination","Details","data","itemsPerPage","startFrom","slicedData","pagination","prevPage","nextPage","changePage","map","item","id","name","email","company","job","city","phone","movie","page","ellipsis","current","e"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\r\n\r\nimport usePagination from '../hooks/usePagination';\r\n\r\nconst Details = ({ data, itemsPerPage, startFrom }) => {\r\n  const { slicedData, pagination, prevPage, nextPage, changePage } = usePagination({ itemsPerPage, data, startFrom });\r\n\r\n  return(\r\n    <Fragment>\r\n      <table className=\"table is-fullwidth is-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>Id</th>\r\n            <th>Name</th>\r\n            <th>Email</th>\r\n            <th>Company</th>\r\n            <th>Job</th>\r\n            <th>City</th>\r\n            <th>Phone</th>\r\n            <th>Fav Movie</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {slicedData.map(item => (\r\n            <tr key={item.id}>\r\n              <td>{item.name}</td>\r\n              <td>{item.email}</td>\r\n              <td>{item.company}</td>\r\n              <td>{item.job}</td>\r\n              <td>{item.city}</td>\r\n              <td>{item.phone}</td>\r\n              <td>{item.movie}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <nav className=\"pagination\">\r\n        <a href=\"/#\" className=\"pagination-previous\" onClick={prevPage}>Previous</a>\r\n        <a href=\"/#\" className=\"pagination-next\" onClick={nextPage}>Next</a>\r\n        <ul className=\"pagination-list\">\r\n          {pagination.map(page => {\r\n              if(!page.ellipsis) {\r\n                return <li key={page.id}>\r\n                  <a \r\n                    href=\"/#\"\r\n                    className={page.current ? 'pagination-link is-current' : 'pagination-link'}\r\n                    onClick={(e) => changePage(page.id, e)}\r\n                  >\r\n                    {page.id}\r\n                  </a>\r\n                </li>\r\n              }else {\r\n                return <li key={page.id}><span className=\"pagination-ellipsis\">&hellip;</span></li>\r\n              }\r\n          })}\r\n        </ul>\r\n      </nav>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Details;"]},"metadata":{},"sourceType":"module"}